using MediatR;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace FSH.WebApi.Application.Accounting.CustomerInvoices;

public class CreateCustomerInvoiceRequest : IRequest<Guid>
{
    [Required]
    public Guid CustomerId { get; set; }
    public Guid? OrderId { get; set; } // Optional link to an operational Order

    [Required]
    public DateTime InvoiceDate { get; set; }

    [Required]
    public DateTime DueDate { get; set; }

    [Required]
    [MaxLength(3)] // E.g., "USD", "EUR"
    public string Currency { get; set; } = "USD"; // Default currency, adjust as needed

    [MaxLength(2000)]
    public string? Notes { get; set; }

    [Required]
    [MinLength(1, ErrorMessage = "Invoice must have at least one item.")]
    public List<CreateCustomerInvoiceItemRequest> InvoiceItems { get; set; } = new();

    // InvoiceNumber will be auto-generated by the handler.
    // TotalAmount will be calculated by the handler based on items.
    // Status will be set by the handler, typically to Draft or Sent.
}

public class CreateCustomerInvoiceItemRequest
{
    [Required]
    [MaxLength(1000)]
    public string Description { get; set; } = default!;

    public Guid? ProductId { get; set; } // Optional link to a Product

    [Required]
    [Range(0.0001, double.MaxValue)]
    public decimal Quantity { get; set; }

    [Required]
    [Range(0.01, double.MaxValue)]
    public decimal UnitPrice { get; set; }

    [Range(0, double.MaxValue)] // Tax can be zero
    public decimal TaxAmount { get; set; } = 0;
}
