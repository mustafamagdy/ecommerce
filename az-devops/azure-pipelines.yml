name: "$(Date:yyyy).$(Date:MM).$(Rev:r)"

trigger:
  batch: true
  branches:
    include:
    - backend
    - features/*
    - bugs/*
  paths:
    include:
    - src/*
    - tests/*
    - az-devops/*
    - FSH.WebApi.sln
    - Directory.Build.props

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  appDir: 'backend'
  srcDir: '$(appDir)/src'
  sln: 'FSH.WebApi.sln'
  coverageReportDir: '$(Build.SourcesDirectory)/$(srcDir)/coverlet/reports'

jobs:
- job:
  displayName: Build App
  steps:
  - task: UseDotNet@2
    displayName: Installing .NET SDK
    inputs:
      packageType: 'sdk'
      version: '6.0.x'

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore      
      projects: '$(appDir)/**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build      
      projects: $(srcDir)/Host/Host.csproj
      arguments: '-c $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: Install ReportGenerator tool
    inputs:
      command: custom
      custom: tool
      arguments: install --tool-path . dotnet-reportgenerator-globaltool --ignore-failed-sources
  
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: '$(appDir)/tests/**/*.csproj'
      arguments: '-c $(buildConfiguration) --no-restore --collect:"XPlat Code Coverage"'

  # - script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(coverageReportDir) -reporttypes:"Cobertura"
  #   displayName: Create coverage reports

  # - task: PublishCodeCoverageResults@1
  #   displayName: 'Publish code coverage'
  #   inputs:
  #     codeCoverageTool: Cobertura
  #     summaryFileLocation: $(coverageReportDir)/Cobertura.xml