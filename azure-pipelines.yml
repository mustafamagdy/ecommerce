name: "$(Date:yyyy).$(Date:MM).$(Rev:r)"

trigger:
  batch: true
  branches:
    include:
    - backend
    - features/*
    - bugs/*
  paths:
    include:
    - src/*
    - tests/*
    - az-devops/*
    - FSH.WebApi.sln
    - Directory.Build.props

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  appProjectDir: 'backend/src'
  coverageReportDir: '$(Build.SourcesDirectory)/$(appProjectDir)/coverlet/reports'

jobs:
- job:
  displayName: Build App
  steps:
  - task: DockerCompose@0
    displayName: Start dependencies (docker-compose)
    inputs:
      containerregistrytype: Container Registry
      dockerComposeFile: backend/docker-compose.yml
      dockerComposeCommand: 'up -d'
  - task: UseDotNet@2
    displayName: Installing .NET SDK
    inputs:
      packageType: 'sdk'
      version: '6.0.x'

  - task: DotNetCoreCLI@2
    displayName: Install ReportGenerator tool
    inputs:
      command: custom
      custom: tool
      arguments: install --tool-path . dotnet-reportgenerator-globaltool --ignore-failed-sources
  
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: 'backend/**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: $(appProjectDir)/Host/Host.csproj
      arguments: '-c $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: 'backend/tests/**/*.csproj'
      arguments: '-c $(buildConfiguration) --no-restore --collect:"XPlat Code Coverage"'

  - script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(coverageReportDir) -reporttypes:"Cobertura"
    displayName: Create coverage reports

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(coverageReportDir)/Cobertura.xml